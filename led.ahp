Version: 2.0

#########################
# Alternatives Section
#

Alternatives: &alternatives
# Here, we list all the alternatives, together with their attributes. 
# We can use these attributes later in the file when defining 
# preferenceFunctions. The attributes can be quantitative or 
# qualitative.
  Hitachi50HB5W62:
    matryca: 50
    JasnoscEkranu: 300
    cena: 1499
    kolor_obudowy: zielono-szary
    moc_wat: 1800
  SamsungUE55MU6172:
    matryca: 55
    JasnoscEkranu: 450
    cena: 2599
    kolor_obudowy: szaro-niebieski
    moc_wat: 1700
  LG43LJ594V:
    matryca: 43
    JasnoscEkranu: 350
    cena: 1399
    kolor_obudowy: szaro-niebieski
    moc_wat: 17
  LG55UJ6517:
    matryca: 55
    JasnoscEkranu: 450
    cena: 2599
    kolor_obudowy: szary
    moc_wat: 1400
  Philips43PFT4112/12:
    matryca: 43
    JasnoscEkranu: 275
    cena: 1190
    kolor_obudowy: szaro-czerwony
    moc_wat: 1600
  SamsungUE50MU6172:
    matryca: 50
    JasnoscEkranu: 350
    cena: 2299
    kolor_obudowy: czerwono-bialy
    moc_wat: 1400
  SamsungUE43MU6172:
    matryca: 43
    JasnoscEkranu: 250
    cena: 1849
    kolor_obudowy: bialo-niebieski
    moc_wat: 1700
  LG49UJ634V:
    matryca: 49
    JasnoscEkranu: 350
    cena: 1849
    kolor_obudowy: szary
    moc_wat: 1700
  SamsungUE55MU7042:
    matryca: 42
    JasnoscEkranu: 450
    cena: 3999
    kolor_obudowy: szary
    moc_wat: 1400
  Sony_KD-55XE7005:
    matryca: 55
    JasnoscEkranu: 500
    cena: 2999
    kolor_obudowy: czerwono-bialy
    moc_wat: 2000

#
# End of Alternatives Section
#####################################

#####################################
# Goal Section
#


Goal:
# The goal spans a tree of criteria and the alternatives
  name: Zakup monitora LED
  description: >
    This is a classic single decision maker problem. It models
    the situation facing by a family that wants to buy a new monitor LED.
  author: unknow
  decision-makers:
    - Ojciec: 0.4
    - Matka: 0.6
    - Dziecko: 0.2
  preferences:
    # preferences are typically defined pairwise
    # 1 means: A is equal to B
    # 9 means: A is highly preferrable to B
    # 1/9 means: B is highly preferrable to A
    Ojciec:
      pairwise:
        - [Wydajnosc, Jakosc, 3]
        - [Wydajnosc, Styl, 9]
        - [Wydajnosc, Cena, 5]
        - [Jakosc, Styl, 7]
        - [Jakosc, Cena, 1]
        - [Styl, Cena, 1/9]
    Matka:
      pairwise:
        - [Wydajnosc, Jakosc, 2]
        - [Wydajnosc, Styl, 6]
        - [Wydajnosc, Cena, 1/3]
        - [Jakosc, Styl, 4]
        - [Jakosc, Cena, 1/6]
        - [Styl, Cena, 1/7]
    Dziecko:
      pairwise:
        - [Wydajnosc, Jakosc, 1/2]
        - [Wydajnosc, Styl, 1/6]
        - [Wydajnosc, Cena, 1/2]
        - [Jakosc, Styl, 1/6]
        - [Jakosc, Cena, 1]
        - [Styl, Cena, 6]
  children: 
    Wydajnosc: 
      preferences:
        Ojciec:
            # Komentarz - metoda słuzaca do porownywania w parach tego, jak niski pobor mocy w watach może byc utrzymywany
            pairwiseFunction: 
                function(a1, a2) min(9, max(1/9, a2$moc_wat/a1$moc_wat))
        Matka:
            # Komentarz - ocena wydajnosci na podstawie tego, jak niski pobor mocy w watach  może byc utrzymywany
            scoreFunction:
                function(a) -a$moc_wat
        Dziecko:
            # Komentarz - ocena wydajnosci na podstawie tego, jak niski pobor mocy w watach może byc utrzymywany
            scoreFunction:
                function(a) -a$moc_wat
      children: *alternatives
    Jakosc: 
      preferences:
        Ojciec:
          # Komentarz - ocena jakosci na podstawie matrycy wyznaczonej w calach
          scoreFunction:
              function(a) a$matryca
        Matka:
          # Komentarz - metoda porownywania matrycy (") w parach
          pairwiseFunction: 
              function(a1, a2) min(9, max(1/9, a2$matryca/a1$matryca))
        Dziecko:
          # Komentarz - ocena jakosci na podstawie matrycy wyznaczonej w calach
          scoreFunction:
              function(a) a$matryca
      children: *alternatives
    Styl: 
      preferences:
        Ojciec:
          # Komentarz - ocena stylu na podstawie koloru obudowy; brane kolory pod uwage: zielono-szary, szaro-niebieski, szary, szaro-czerwony, srebrny, czarny (jakiekolwiek inne kolory oceniamy na 4)
          pairwiseFunction: >
            PreferencjeStylu <- function(a1, a2) {
              if (a1$kolor_obudowy == "zielono-szary") wynik_stylu_dla_a1 <- 1
              else if (a1$kolor_obudowy == "szaro-niebieski") wynik_stylu_dla_a1 <- 6
              else if (a1$kolor_obudowy == "szary") wynik_stylu_dla_a1 <- 7
              else if (a1$kolor_obudowy == "szaro-czerwony") wynik_stylu_dla_a1 <- 5
              else if (a1$kolor_obudowy == "srebrny") wynik_stylu_dla_a1 <- 8
              else if (a1$kolor_obudowy == "czarny") wynik_stylu_dla_a1 <- 3
              else wynik_stylu_dla_a1 <- 4
              if (a2$kolor_obudowy == "zielono-szary") wynik_stylu_dla_a2 <- 1
              else if (a2$kolor_obudowy == "szaro-niebieski") wynik_stylu_dla_a2 <- 6
              else if (a2$kolor_obudowy == "szary") wynik_stylu_dla_a2 <- 7
              else if (a2$kolor_obudowy == "szaro-czerwony") wynik_stylu_dla_a2 <- 5
              else if (a2$kolor_obudowy == "srebrny") wynik_stylu_dla_a2 <- 8
              else if (a2$kolor_obudowy == "czarny") wynik_stylu_dla_a2 <- 3
              else wynik_stylu_dla_a2 <- 4
              if (wynik_stylu_dla_a1 < wynik_stylu_dla_a2) return (wynik_stylu_dla_a2/wynik_stylu_dla_a1)
              return (wynik_stylu_dla_a1/wynik_stylu_dla_a2)
              }
        Matka:
          # Komentarz - ocena stylu na podstawie koloru obudowy; brane kolory pod uwage: zielono-szary, szaro-niebieski, szary, szaro-czerwony, czerwono-bialy, bialo-niebieski, niebieski, niebiesko-zolty, srebrny, pomaranczowy, czarny (jakiekolwiek inne kolory oceniamy na 5)
          pairwiseFunction: >
            PreferencjeStylu <- function(a1, a2) {
              if (a1$kolor_obudowy == "zielono-szary") wynik_stylu_dla_a1 <- 2
              else if (a1$kolor_obudowy == "szaro-niebieski") wynik_stylu_dla_a1 <- 1
              else if (a1$kolor_obudowy == "szary") wynik_stylu_dla_a1 <- 3
              else if (a1$kolor_obudowy == "szaro-czerwony") wynik_stylu_dla_a1 <- 2
              else if (a1$kolor_obudowy == "czerwono-bialy") wynik_stylu_dla_a1 <- 7
              else if (a1$kolor_obudowy == "bialo-niebieski") wynik_stylu_dla_a1 <- 6
              else if (a1$kolor_obudowy == "niebieski") wynik_stylu_dla_a1 <- 6
              else if (a1$kolor_obudowy == "niebiesko-zolty") wynik_stylu_dla_a1 <- 8
              else if (a1$kolor_obudowy == "srebrny") wynik_stylu_dla_a1 <- 4
              else if (a1$kolor_obudowy == "pomaranczowy") wynik_stylu_dla_a1 <- 9
              else if (a1$kolor_obudowy == "czarny") wynik_stylu_dla_a1 <- 3
              else wynik_stylu_dla_a1 <- 5
              if (a2$kolor_obudowy == "zielono-szary") wynik_stylu_dla_a2 <- 2
              else if (a2$kolor_obudowy == "szaro-niebieski") wynik_stylu_dla_a2 <- 1
              else if (a2$kolor_obudowy == "szary") wynik_stylu_dla_a2 <- 3
              else if (a2$kolor_obudowy == "szaro-czerwony") wynik_stylu_dla_a2 <- 2
              else if (a2$kolor_obudowy == "czerwono-bialy") wynik_stylu_dla_a2 <- 7
              else if (a2$kolor_obudowy == "bialo-niebieski") wynik_stylu_dla_a2 <- 6
              else if (a2$kolor_obudowy == "niebieski") wynik_stylu_dla_a2 <- 6
              else if (a2$kolor_obudowy == "niebiesko-zolty") wynik_stylu_dla_a2 <- 8
              else if (a2$kolor_obudowy == "srebrny") wynik_stylu_dla_a2 <- 4
              else if (a2$kolor_obudowy == "pomaranczowy") wynik_stylu_dla_a2 <- 9
              else if (a2$kolor_obudowy == "czarny") wynik_stylu_dla_a2 <- 3
              else wynik_stylu_dla_a2 <- 5
              if (wynik_stylu_dla_a1 < wynik_stylu_dla_a2) return (wynik_stylu_dla_a2/wynik_stylu_dla_a1)
              return (wynik_stylu_dla_a1/wynik_stylu_dla_a2)
              }
        Dziecko:
          # Komentarz - ocena stylu na podstawie koloru obudowy; brane kolory pod uwage: zielono-szary, szaro-niebieski, szaro-czerwony, czerwono-bialy, bialo-niebieski, niebieski, niebiesko-zolty, srebrny, pomaranczowy (jakiekolwiek inne kolory oceniamy na 1)
          pairwiseFunction: >
            PreferencjeStylu <- function(a1, a2) {
              if (a1$kolor_obudowy == "zielono-szary") wynik_stylu_dla_a1 <- 3
              else if (a1$kolor_obudowy == "szaro-niebieski") wynik_stylu_dla_a1 <- 3
              else if (a1$kolor_obudowy == "szaro-czerwony") wynik_stylu_dla_a1 <- 2
              else if (a1$kolor_obudowy == "czerwono-bialy") wynik_stylu_dla_a1 <- 5
              else if (a1$kolor_obudowy == "bialo-niebieski") wynik_stylu_dla_a1 <- 8
              else if (a1$kolor_obudowy == "niebieski") wynik_stylu_dla_a1 <- 9
              else if (a1$kolor_obudowy == "niebiesko-zolty") wynik_stylu_dla_a1 <- 7
              else if (a1$kolor_obudowy == "srebrny") wynik_stylu_dla_a1 <- 4
              else if (a1$kolor_obudowy == "pomaranczowy") wynik_stylu_dla_a1 <- 6
              else wynik_stylu_dla_a1 <- 1
              if (a2$kolor_obudowy == "zielono-szary") wynik_stylu_dla_a2 <- 3
              else if (a2$kolor_obudowy == "szaro-niebieski") wynik_stylu_dla_a2 <- 3
              else if (a2$kolor_obudowy == "szaro-czerwony") wynik_stylu_dla_a2 <- 2
              else if (a2$kolor_obudowy == "czerwono-bialy") wynik_stylu_dla_a2 <- 5
              else if (a2$kolor_obudowy == "bialo-niebieski") wynik_stylu_dla_a2 <- 8
              else if (a2$kolor_obudowy == "niebieski") wynik_stylu_dla_a2 <- 9
              else if (a2$kolor_obudowy == "niebiesko-zolty") wynik_stylu_dla_a2 <- 7
              else if (a2$kolor_obudowy == "srebrny") wynik_stylu_dla_a2 <- 4
              else if (a2$kolor_obudowy == "pomaranczowy") wynik_stylu_dla_a2 <- 6
              else wynik_stylu_dla_a2 <- 1
              if (wynik_stylu_dla_a1 < wynik_stylu_dla_a2) return (wynik_stylu_dla_a2/wynik_stylu_dla_a1)
              return (wynik_stylu_dla_a1/wynik_stylu_dla_a2)
              }
      children: *alternatives
    Cena: 
      preferences:
        Ojciec:
          # Komentarz - ocena ceny
          scoreFunction:
              function(a) -a$cena
        Matka:
          # Komentarz - ocena ceny
          scoreFunction:
              function(a) -a$cena
        Dziecko:
          # Komentarz - metoda słuzaca do porownywania w parach cen lodowek
          pairwiseFunction: 
              function(a1, a2) min(9, max(1/9, a2$cena/a1$cena))
      children: *alternatives

#
# End of Goal Section
#####################################
